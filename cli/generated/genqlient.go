// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package generated

import (
	"github.com/Khan/genqlient/graphql"
	"github.com/husarnet/husarnet/cli/v2/types"
)

// AssignDeviceGroupResponse is returned by AssignDeviceGroup on success.
type AssignDeviceGroupResponse struct {
	UpdateDevice AssignDeviceGroupUpdateDeviceUpdateDeviceMutation `json:"updateDevice"`
}

// GetUpdateDevice returns AssignDeviceGroupResponse.UpdateDevice, and is useful for accessing the field via an interface.
func (v *AssignDeviceGroupResponse) GetUpdateDevice() AssignDeviceGroupUpdateDeviceUpdateDeviceMutation {
	return v.UpdateDevice
}

// AssignDeviceGroupUpdateDeviceUpdateDeviceMutation includes the requested fields of the GraphQL type UpdateDeviceMutation.
type AssignDeviceGroupUpdateDeviceUpdateDeviceMutation struct {
	Device AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType `json:"device"`
}

// GetDevice returns AssignDeviceGroupUpdateDeviceUpdateDeviceMutation.Device, and is useful for accessing the field via an interface.
func (v *AssignDeviceGroupUpdateDeviceUpdateDeviceMutation) GetDevice() AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType {
	return v.Device
}

// AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType includes the requested fields of the GraphQL type DeviceType.
type AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType struct {
	DeviceId         string                                                                                       `json:"deviceId"`
	Name             string                                                                                       `json:"name"`
	GroupMemberships []AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType `json:"groupMemberships"`
}

// GetDeviceId returns AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType.DeviceId, and is useful for accessing the field via an interface.
func (v *AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType) GetDeviceId() string {
	return v.DeviceId
}

// GetName returns AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType.Name, and is useful for accessing the field via an interface.
func (v *AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType) GetName() string {
	return v.Name
}

// GetGroupMemberships returns AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType.GroupMemberships, and is useful for accessing the field via an interface.
func (v *AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType) GetGroupMemberships() []AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType {
	return v.GroupMemberships
}

// AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType includes the requested fields of the GraphQL type GroupType.
type AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType.Id, and is useful for accessing the field via an interface.
func (v *AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType) GetId() string {
	return v.Id
}

// GetName returns AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType.Name, and is useful for accessing the field via an interface.
func (v *AssignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType) GetName() string {
	return v.Name
}

// CreateGroupCreateGroupCreateGroupMutation includes the requested fields of the GraphQL type CreateGroupMutation.
type CreateGroupCreateGroupCreateGroupMutation struct {
	Group CreateGroupCreateGroupCreateGroupMutationGroupGroupType `json:"group"`
}

// GetGroup returns CreateGroupCreateGroupCreateGroupMutation.Group, and is useful for accessing the field via an interface.
func (v *CreateGroupCreateGroupCreateGroupMutation) GetGroup() CreateGroupCreateGroupCreateGroupMutationGroupGroupType {
	return v.Group
}

// CreateGroupCreateGroupCreateGroupMutationGroupGroupType includes the requested fields of the GraphQL type GroupType.
type CreateGroupCreateGroupCreateGroupMutationGroupGroupType struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns CreateGroupCreateGroupCreateGroupMutationGroupGroupType.Id, and is useful for accessing the field via an interface.
func (v *CreateGroupCreateGroupCreateGroupMutationGroupGroupType) GetId() string { return v.Id }

// GetName returns CreateGroupCreateGroupCreateGroupMutationGroupGroupType.Name, and is useful for accessing the field via an interface.
func (v *CreateGroupCreateGroupCreateGroupMutationGroupGroupType) GetName() string { return v.Name }

// CreateGroupResponse is returned by CreateGroup on success.
type CreateGroupResponse struct {
	CreateGroup CreateGroupCreateGroupCreateGroupMutation `json:"createGroup"`
}

// GetCreateGroup returns CreateGroupResponse.CreateGroup, and is useful for accessing the field via an interface.
func (v *CreateGroupResponse) GetCreateGroup() CreateGroupCreateGroupCreateGroupMutation {
	return v.CreateGroup
}

// GetDevicesDevicesDeviceType includes the requested fields of the GraphQL type DeviceType.
type GetDevicesDevicesDeviceType struct {
	DeviceId         string                                                 `json:"deviceId"`
	Name             string                                                 `json:"name"`
	Version          string                                                 `json:"version"`
	UserAgent        string                                                 `json:"userAgent"`
	Owner            GetDevicesDevicesDeviceTypeOwnerUserType               `json:"owner"`
	IsFullyManaged   bool                                                   `json:"isFullyManaged"`
	GroupMemberships []GetDevicesDevicesDeviceTypeGroupMembershipsGroupType `json:"groupMemberships"`
}

// GetDeviceId returns GetDevicesDevicesDeviceType.DeviceId, and is useful for accessing the field via an interface.
func (v *GetDevicesDevicesDeviceType) GetDeviceId() string { return v.DeviceId }

// GetName returns GetDevicesDevicesDeviceType.Name, and is useful for accessing the field via an interface.
func (v *GetDevicesDevicesDeviceType) GetName() string { return v.Name }

// GetVersion returns GetDevicesDevicesDeviceType.Version, and is useful for accessing the field via an interface.
func (v *GetDevicesDevicesDeviceType) GetVersion() string { return v.Version }

// GetUserAgent returns GetDevicesDevicesDeviceType.UserAgent, and is useful for accessing the field via an interface.
func (v *GetDevicesDevicesDeviceType) GetUserAgent() string { return v.UserAgent }

// GetOwner returns GetDevicesDevicesDeviceType.Owner, and is useful for accessing the field via an interface.
func (v *GetDevicesDevicesDeviceType) GetOwner() GetDevicesDevicesDeviceTypeOwnerUserType {
	return v.Owner
}

// GetIsFullyManaged returns GetDevicesDevicesDeviceType.IsFullyManaged, and is useful for accessing the field via an interface.
func (v *GetDevicesDevicesDeviceType) GetIsFullyManaged() bool { return v.IsFullyManaged }

// GetGroupMemberships returns GetDevicesDevicesDeviceType.GroupMemberships, and is useful for accessing the field via an interface.
func (v *GetDevicesDevicesDeviceType) GetGroupMemberships() []GetDevicesDevicesDeviceTypeGroupMembershipsGroupType {
	return v.GroupMemberships
}

// GetDevicesDevicesDeviceTypeGroupMembershipsGroupType includes the requested fields of the GraphQL type GroupType.
type GetDevicesDevicesDeviceTypeGroupMembershipsGroupType struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns GetDevicesDevicesDeviceTypeGroupMembershipsGroupType.Id, and is useful for accessing the field via an interface.
func (v *GetDevicesDevicesDeviceTypeGroupMembershipsGroupType) GetId() string { return v.Id }

// GetName returns GetDevicesDevicesDeviceTypeGroupMembershipsGroupType.Name, and is useful for accessing the field via an interface.
func (v *GetDevicesDevicesDeviceTypeGroupMembershipsGroupType) GetName() string { return v.Name }

// GetDevicesDevicesDeviceTypeOwnerUserType includes the requested fields of the GraphQL type UserType.
type GetDevicesDevicesDeviceTypeOwnerUserType struct {
	Username string `json:"username"`
}

// GetUsername returns GetDevicesDevicesDeviceTypeOwnerUserType.Username, and is useful for accessing the field via an interface.
func (v *GetDevicesDevicesDeviceTypeOwnerUserType) GetUsername() string { return v.Username }

// GetDevicesResponse is returned by GetDevices on success.
type GetDevicesResponse struct {
	Devices []GetDevicesDevicesDeviceType `json:"devices"`
}

// GetDevices returns GetDevicesResponse.Devices, and is useful for accessing the field via an interface.
func (v *GetDevicesResponse) GetDevices() []GetDevicesDevicesDeviceType { return v.Devices }

// GetGroupsGroupsGroupType includes the requested fields of the GraphQL type GroupType.
type GetGroupsGroupsGroupType struct {
	Id          string `json:"id"`
	Name        string `json:"name"`
	JoinCode    string `json:"joinCode"`
	DeviceCount int    `json:"deviceCount"`
}

// GetId returns GetGroupsGroupsGroupType.Id, and is useful for accessing the field via an interface.
func (v *GetGroupsGroupsGroupType) GetId() string { return v.Id }

// GetName returns GetGroupsGroupsGroupType.Name, and is useful for accessing the field via an interface.
func (v *GetGroupsGroupsGroupType) GetName() string { return v.Name }

// GetJoinCode returns GetGroupsGroupsGroupType.JoinCode, and is useful for accessing the field via an interface.
func (v *GetGroupsGroupsGroupType) GetJoinCode() string { return v.JoinCode }

// GetDeviceCount returns GetGroupsGroupsGroupType.DeviceCount, and is useful for accessing the field via an interface.
func (v *GetGroupsGroupsGroupType) GetDeviceCount() int { return v.DeviceCount }

// GetGroupsResponse is returned by GetGroups on success.
type GetGroupsResponse struct {
	Groups []GetGroupsGroupsGroupType `json:"groups"`
}

// GetGroups returns GetGroupsResponse.Groups, and is useful for accessing the field via an interface.
func (v *GetGroupsResponse) GetGroups() []GetGroupsGroupsGroupType { return v.Groups }

// ObtainTokenResponse is returned by ObtainToken on success.
type ObtainTokenResponse struct {
	TokenAuth ObtainTokenTokenAuthObtainJSONWebToken `json:"tokenAuth"`
}

// GetTokenAuth returns ObtainTokenResponse.TokenAuth, and is useful for accessing the field via an interface.
func (v *ObtainTokenResponse) GetTokenAuth() ObtainTokenTokenAuthObtainJSONWebToken {
	return v.TokenAuth
}

// ObtainTokenTokenAuthObtainJSONWebToken includes the requested fields of the GraphQL type ObtainJSONWebToken.
type ObtainTokenTokenAuthObtainJSONWebToken struct {
	Token            string           `json:"token"`
	Payload          types.JWTPayload `json:"payload"`
	RefreshExpiresIn int              `json:"refreshExpiresIn"`
}

// GetToken returns ObtainTokenTokenAuthObtainJSONWebToken.Token, and is useful for accessing the field via an interface.
func (v *ObtainTokenTokenAuthObtainJSONWebToken) GetToken() string { return v.Token }

// GetPayload returns ObtainTokenTokenAuthObtainJSONWebToken.Payload, and is useful for accessing the field via an interface.
func (v *ObtainTokenTokenAuthObtainJSONWebToken) GetPayload() types.JWTPayload { return v.Payload }

// GetRefreshExpiresIn returns ObtainTokenTokenAuthObtainJSONWebToken.RefreshExpiresIn, and is useful for accessing the field via an interface.
func (v *ObtainTokenTokenAuthObtainJSONWebToken) GetRefreshExpiresIn() int { return v.RefreshExpiresIn }

// RefreshTokenRefreshTokenRefresh includes the requested fields of the GraphQL type Refresh.
type RefreshTokenRefreshTokenRefresh struct {
	Token string `json:"token"`
}

// GetToken returns RefreshTokenRefreshTokenRefresh.Token, and is useful for accessing the field via an interface.
func (v *RefreshTokenRefreshTokenRefresh) GetToken() string { return v.Token }

// RefreshTokenResponse is returned by RefreshToken on success.
type RefreshTokenResponse struct {
	RefreshToken RefreshTokenRefreshTokenRefresh `json:"refreshToken"`
}

// GetRefreshToken returns RefreshTokenResponse.RefreshToken, and is useful for accessing the field via an interface.
func (v *RefreshTokenResponse) GetRefreshToken() RefreshTokenRefreshTokenRefresh {
	return v.RefreshToken
}

// RemoveDeviceRemoveDeviceRemoveDeviceMutation includes the requested fields of the GraphQL type RemoveDeviceMutation.
type RemoveDeviceRemoveDeviceRemoveDeviceMutation struct {
	Success bool `json:"success"`
}

// GetSuccess returns RemoveDeviceRemoveDeviceRemoveDeviceMutation.Success, and is useful for accessing the field via an interface.
func (v *RemoveDeviceRemoveDeviceRemoveDeviceMutation) GetSuccess() bool { return v.Success }

// RemoveDeviceResponse is returned by RemoveDevice on success.
type RemoveDeviceResponse struct {
	RemoveDevice RemoveDeviceRemoveDeviceRemoveDeviceMutation `json:"removeDevice"`
}

// GetRemoveDevice returns RemoveDeviceResponse.RemoveDevice, and is useful for accessing the field via an interface.
func (v *RemoveDeviceResponse) GetRemoveDevice() RemoveDeviceRemoveDeviceRemoveDeviceMutation {
	return v.RemoveDevice
}

// RemoveGroupRemoveGroupRemoveGroupMutation includes the requested fields of the GraphQL type RemoveGroupMutation.
type RemoveGroupRemoveGroupRemoveGroupMutation struct {
	Success bool `json:"success"`
}

// GetSuccess returns RemoveGroupRemoveGroupRemoveGroupMutation.Success, and is useful for accessing the field via an interface.
func (v *RemoveGroupRemoveGroupRemoveGroupMutation) GetSuccess() bool { return v.Success }

// RemoveGroupResponse is returned by RemoveGroup on success.
type RemoveGroupResponse struct {
	RemoveGroup RemoveGroupRemoveGroupRemoveGroupMutation `json:"removeGroup"`
}

// GetRemoveGroup returns RemoveGroupResponse.RemoveGroup, and is useful for accessing the field via an interface.
func (v *RemoveGroupResponse) GetRemoveGroup() RemoveGroupRemoveGroupRemoveGroupMutation {
	return v.RemoveGroup
}

// RenameDeviceResponse is returned by RenameDevice on success.
type RenameDeviceResponse struct {
	UpdateDevice RenameDeviceUpdateDeviceUpdateDeviceMutation `json:"updateDevice"`
}

// GetUpdateDevice returns RenameDeviceResponse.UpdateDevice, and is useful for accessing the field via an interface.
func (v *RenameDeviceResponse) GetUpdateDevice() RenameDeviceUpdateDeviceUpdateDeviceMutation {
	return v.UpdateDevice
}

// RenameDeviceUpdateDeviceUpdateDeviceMutation includes the requested fields of the GraphQL type UpdateDeviceMutation.
type RenameDeviceUpdateDeviceUpdateDeviceMutation struct {
	Device RenameDeviceUpdateDeviceUpdateDeviceMutationDeviceDeviceType `json:"device"`
}

// GetDevice returns RenameDeviceUpdateDeviceUpdateDeviceMutation.Device, and is useful for accessing the field via an interface.
func (v *RenameDeviceUpdateDeviceUpdateDeviceMutation) GetDevice() RenameDeviceUpdateDeviceUpdateDeviceMutationDeviceDeviceType {
	return v.Device
}

// RenameDeviceUpdateDeviceUpdateDeviceMutationDeviceDeviceType includes the requested fields of the GraphQL type DeviceType.
type RenameDeviceUpdateDeviceUpdateDeviceMutationDeviceDeviceType struct {
	DeviceId string `json:"deviceId"`
	Name     string `json:"name"`
}

// GetDeviceId returns RenameDeviceUpdateDeviceUpdateDeviceMutationDeviceDeviceType.DeviceId, and is useful for accessing the field via an interface.
func (v *RenameDeviceUpdateDeviceUpdateDeviceMutationDeviceDeviceType) GetDeviceId() string {
	return v.DeviceId
}

// GetName returns RenameDeviceUpdateDeviceUpdateDeviceMutationDeviceDeviceType.Name, and is useful for accessing the field via an interface.
func (v *RenameDeviceUpdateDeviceUpdateDeviceMutationDeviceDeviceType) GetName() string {
	return v.Name
}

// RenameGroupResponse is returned by RenameGroup on success.
type RenameGroupResponse struct {
	UpdateGroup RenameGroupUpdateGroupUpdateGroupMutation `json:"updateGroup"`
}

// GetUpdateGroup returns RenameGroupResponse.UpdateGroup, and is useful for accessing the field via an interface.
func (v *RenameGroupResponse) GetUpdateGroup() RenameGroupUpdateGroupUpdateGroupMutation {
	return v.UpdateGroup
}

// RenameGroupUpdateGroupUpdateGroupMutation includes the requested fields of the GraphQL type UpdateGroupMutation.
type RenameGroupUpdateGroupUpdateGroupMutation struct {
	Group RenameGroupUpdateGroupUpdateGroupMutationGroupGroupType `json:"group"`
}

// GetGroup returns RenameGroupUpdateGroupUpdateGroupMutation.Group, and is useful for accessing the field via an interface.
func (v *RenameGroupUpdateGroupUpdateGroupMutation) GetGroup() RenameGroupUpdateGroupUpdateGroupMutationGroupGroupType {
	return v.Group
}

// RenameGroupUpdateGroupUpdateGroupMutationGroupGroupType includes the requested fields of the GraphQL type GroupType.
type RenameGroupUpdateGroupUpdateGroupMutationGroupGroupType struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns RenameGroupUpdateGroupUpdateGroupMutationGroupGroupType.Id, and is useful for accessing the field via an interface.
func (v *RenameGroupUpdateGroupUpdateGroupMutationGroupGroupType) GetId() string { return v.Id }

// GetName returns RenameGroupUpdateGroupUpdateGroupMutationGroupGroupType.Name, and is useful for accessing the field via an interface.
func (v *RenameGroupUpdateGroupUpdateGroupMutationGroupGroupType) GetName() string { return v.Name }

// ShowGroupGroupMembersByIdDeviceType includes the requested fields of the GraphQL type DeviceType.
type ShowGroupGroupMembersByIdDeviceType struct {
	DeviceId  string `json:"deviceId"`
	Name      string `json:"name"`
	Version   string `json:"version"`
	UserAgent string `json:"userAgent"`
}

// GetDeviceId returns ShowGroupGroupMembersByIdDeviceType.DeviceId, and is useful for accessing the field via an interface.
func (v *ShowGroupGroupMembersByIdDeviceType) GetDeviceId() string { return v.DeviceId }

// GetName returns ShowGroupGroupMembersByIdDeviceType.Name, and is useful for accessing the field via an interface.
func (v *ShowGroupGroupMembersByIdDeviceType) GetName() string { return v.Name }

// GetVersion returns ShowGroupGroupMembersByIdDeviceType.Version, and is useful for accessing the field via an interface.
func (v *ShowGroupGroupMembersByIdDeviceType) GetVersion() string { return v.Version }

// GetUserAgent returns ShowGroupGroupMembersByIdDeviceType.UserAgent, and is useful for accessing the field via an interface.
func (v *ShowGroupGroupMembersByIdDeviceType) GetUserAgent() string { return v.UserAgent }

// ShowGroupResponse is returned by ShowGroup on success.
type ShowGroupResponse struct {
	GroupMembersById []ShowGroupGroupMembersByIdDeviceType `json:"groupMembersById"`
}

// GetGroupMembersById returns ShowGroupResponse.GroupMembersById, and is useful for accessing the field via an interface.
func (v *ShowGroupResponse) GetGroupMembersById() []ShowGroupGroupMembersByIdDeviceType {
	return v.GroupMembersById
}

// UnassignDeviceGroupResponse is returned by UnassignDeviceGroup on success.
type UnassignDeviceGroupResponse struct {
	UpdateDevice UnassignDeviceGroupUpdateDeviceUpdateDeviceMutation `json:"updateDevice"`
}

// GetUpdateDevice returns UnassignDeviceGroupResponse.UpdateDevice, and is useful for accessing the field via an interface.
func (v *UnassignDeviceGroupResponse) GetUpdateDevice() UnassignDeviceGroupUpdateDeviceUpdateDeviceMutation {
	return v.UpdateDevice
}

// UnassignDeviceGroupUpdateDeviceUpdateDeviceMutation includes the requested fields of the GraphQL type UpdateDeviceMutation.
type UnassignDeviceGroupUpdateDeviceUpdateDeviceMutation struct {
	Device UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType `json:"device"`
}

// GetDevice returns UnassignDeviceGroupUpdateDeviceUpdateDeviceMutation.Device, and is useful for accessing the field via an interface.
func (v *UnassignDeviceGroupUpdateDeviceUpdateDeviceMutation) GetDevice() UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType {
	return v.Device
}

// UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType includes the requested fields of the GraphQL type DeviceType.
type UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType struct {
	DeviceId         string                                                                                         `json:"deviceId"`
	Name             string                                                                                         `json:"name"`
	GroupMemberships []UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType `json:"groupMemberships"`
}

// GetDeviceId returns UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType.DeviceId, and is useful for accessing the field via an interface.
func (v *UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType) GetDeviceId() string {
	return v.DeviceId
}

// GetName returns UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType.Name, and is useful for accessing the field via an interface.
func (v *UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType) GetName() string {
	return v.Name
}

// GetGroupMemberships returns UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType.GroupMemberships, and is useful for accessing the field via an interface.
func (v *UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceType) GetGroupMemberships() []UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType {
	return v.GroupMemberships
}

// UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType includes the requested fields of the GraphQL type GroupType.
type UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType.Id, and is useful for accessing the field via an interface.
func (v *UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType) GetId() string {
	return v.Id
}

// GetName returns UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType.Name, and is useful for accessing the field via an interface.
func (v *UnassignDeviceGroupUpdateDeviceUpdateDeviceMutationDeviceDeviceTypeGroupMembershipsGroupType) GetName() string {
	return v.Name
}

// __AssignDeviceGroupInput is used internally by genqlient
type __AssignDeviceGroupInput struct {
	DevicedeviceIdFragment string `json:"devicedeviceIdFragment"`
	GroupName              string `json:"groupName"`
}

// GetDevicedeviceIdFragment returns __AssignDeviceGroupInput.DevicedeviceIdFragment, and is useful for accessing the field via an interface.
func (v *__AssignDeviceGroupInput) GetDevicedeviceIdFragment() string {
	return v.DevicedeviceIdFragment
}

// GetGroupName returns __AssignDeviceGroupInput.GroupName, and is useful for accessing the field via an interface.
func (v *__AssignDeviceGroupInput) GetGroupName() string { return v.GroupName }

// __CreateGroupInput is used internally by genqlient
type __CreateGroupInput struct {
	Name string `json:"name"`
}

// GetName returns __CreateGroupInput.Name, and is useful for accessing the field via an interface.
func (v *__CreateGroupInput) GetName() string { return v.Name }

// __ObtainTokenInput is used internally by genqlient
type __ObtainTokenInput struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

// GetUsername returns __ObtainTokenInput.Username, and is useful for accessing the field via an interface.
func (v *__ObtainTokenInput) GetUsername() string { return v.Username }

// GetPassword returns __ObtainTokenInput.Password, and is useful for accessing the field via an interface.
func (v *__ObtainTokenInput) GetPassword() string { return v.Password }

// __RefreshTokenInput is used internally by genqlient
type __RefreshTokenInput struct {
	Token string `json:"token"`
}

// GetToken returns __RefreshTokenInput.Token, and is useful for accessing the field via an interface.
func (v *__RefreshTokenInput) GetToken() string { return v.Token }

// __RemoveDeviceInput is used internally by genqlient
type __RemoveDeviceInput struct {
	DeviceId string `json:"deviceId"`
}

// GetDeviceId returns __RemoveDeviceInput.DeviceId, and is useful for accessing the field via an interface.
func (v *__RemoveDeviceInput) GetDeviceId() string { return v.DeviceId }

// __RemoveGroupInput is used internally by genqlient
type __RemoveGroupInput struct {
	Id string `json:"id"`
}

// GetId returns __RemoveGroupInput.Id, and is useful for accessing the field via an interface.
func (v *__RemoveGroupInput) GetId() string { return v.Id }

// __RenameDeviceInput is used internally by genqlient
type __RenameDeviceInput struct {
	DeviceIdFragment string `json:"deviceIdFragment"`
	Name             string `json:"name"`
}

// GetDeviceIdFragment returns __RenameDeviceInput.DeviceIdFragment, and is useful for accessing the field via an interface.
func (v *__RenameDeviceInput) GetDeviceIdFragment() string { return v.DeviceIdFragment }

// GetName returns __RenameDeviceInput.Name, and is useful for accessing the field via an interface.
func (v *__RenameDeviceInput) GetName() string { return v.Name }

// __RenameGroupInput is used internally by genqlient
type __RenameGroupInput struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns __RenameGroupInput.Id, and is useful for accessing the field via an interface.
func (v *__RenameGroupInput) GetId() string { return v.Id }

// GetName returns __RenameGroupInput.Name, and is useful for accessing the field via an interface.
func (v *__RenameGroupInput) GetName() string { return v.Name }

// __ShowGroupInput is used internally by genqlient
type __ShowGroupInput struct {
	Id string `json:"id"`
}

// GetId returns __ShowGroupInput.Id, and is useful for accessing the field via an interface.
func (v *__ShowGroupInput) GetId() string { return v.Id }

// __UnassignDeviceGroupInput is used internally by genqlient
type __UnassignDeviceGroupInput struct {
	DevicedeviceIdFragment string `json:"devicedeviceIdFragment"`
	GroupName              string `json:"groupName"`
}

// GetDevicedeviceIdFragment returns __UnassignDeviceGroupInput.DevicedeviceIdFragment, and is useful for accessing the field via an interface.
func (v *__UnassignDeviceGroupInput) GetDevicedeviceIdFragment() string {
	return v.DevicedeviceIdFragment
}

// GetGroupName returns __UnassignDeviceGroupInput.GroupName, and is useful for accessing the field via an interface.
func (v *__UnassignDeviceGroupInput) GetGroupName() string { return v.GroupName }

func AssignDeviceGroup(
	client graphql.Client,
	devicedeviceIdFragment string,
	groupName string,
) (*AssignDeviceGroupResponse, error) {
	req := &graphql.Request{
		OpName: "AssignDeviceGroup",
		Query: `
mutation AssignDeviceGroup ($devicedeviceIdFragment: String!, $groupName: ID!) {
	updateDevice(deviceIdFragment: $devicedeviceIdFragment, addGroups: [$groupName]) {
		device {
			deviceId
			name
			groupMemberships {
				id
				name
			}
		}
	}
}
`,
		Variables: &__AssignDeviceGroupInput{
			DevicedeviceIdFragment: devicedeviceIdFragment,
			GroupName:              groupName,
		},
	}
	var err error

	var data AssignDeviceGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func CreateGroup(
	client graphql.Client,
	name string,
) (*CreateGroupResponse, error) {
	req := &graphql.Request{
		OpName: "CreateGroup",
		Query: `
mutation CreateGroup ($name: String!) {
	createGroup(name: $name) {
		group {
			id
			name
		}
	}
}
`,
		Variables: &__CreateGroupInput{
			Name: name,
		},
	}
	var err error

	var data CreateGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func GetDevices(
	client graphql.Client,
) (*GetDevicesResponse, error) {
	req := &graphql.Request{
		OpName: "GetDevices",
		Query: `
query GetDevices {
	devices {
		deviceId
		name
		version
		userAgent
		owner {
			username
		}
		isFullyManaged
		groupMemberships {
			id
			name
		}
	}
}
`,
	}
	var err error

	var data GetDevicesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func GetGroups(
	client graphql.Client,
) (*GetGroupsResponse, error) {
	req := &graphql.Request{
		OpName: "GetGroups",
		Query: `
query GetGroups {
	groups {
		id
		name
		joinCode
		deviceCount
	}
}
`,
	}
	var err error

	var data GetGroupsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func ObtainToken(
	client graphql.Client,
	username string,
	password string,
) (*ObtainTokenResponse, error) {
	req := &graphql.Request{
		OpName: "ObtainToken",
		Query: `
mutation ObtainToken ($username: String!, $password: String!) {
	tokenAuth(username: $username, password: $password) {
		token
		payload
		refreshExpiresIn
	}
}
`,
		Variables: &__ObtainTokenInput{
			Username: username,
			Password: password,
		},
	}
	var err error

	var data ObtainTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func RefreshToken(
	client graphql.Client,
	token string,
) (*RefreshTokenResponse, error) {
	req := &graphql.Request{
		OpName: "RefreshToken",
		Query: `
mutation RefreshToken ($token: String!) {
	refreshToken(token: $token) {
		token
	}
}
`,
		Variables: &__RefreshTokenInput{
			Token: token,
		},
	}
	var err error

	var data RefreshTokenResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func RemoveDevice(
	client graphql.Client,
	deviceId string,
) (*RemoveDeviceResponse, error) {
	req := &graphql.Request{
		OpName: "RemoveDevice",
		Query: `
mutation RemoveDevice ($deviceId: ID!) {
	removeDevice(id: $deviceId) {
		success
	}
}
`,
		Variables: &__RemoveDeviceInput{
			DeviceId: deviceId,
		},
	}
	var err error

	var data RemoveDeviceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func RemoveGroup(
	client graphql.Client,
	id string,
) (*RemoveGroupResponse, error) {
	req := &graphql.Request{
		OpName: "RemoveGroup",
		Query: `
mutation RemoveGroup ($id: ID!) {
	removeGroup(id: $id) {
		success
	}
}
`,
		Variables: &__RemoveGroupInput{
			Id: id,
		},
	}
	var err error

	var data RemoveGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func RenameDevice(
	client graphql.Client,
	deviceIdFragment string,
	name string,
) (*RenameDeviceResponse, error) {
	req := &graphql.Request{
		OpName: "RenameDevice",
		Query: `
mutation RenameDevice ($deviceIdFragment: String!, $name: String!) {
	updateDevice(deviceIdFragment: $deviceIdFragment, name: $name) {
		device {
			deviceId
			name
		}
	}
}
`,
		Variables: &__RenameDeviceInput{
			DeviceIdFragment: deviceIdFragment,
			Name:             name,
		},
	}
	var err error

	var data RenameDeviceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func RenameGroup(
	client graphql.Client,
	id string,
	name string,
) (*RenameGroupResponse, error) {
	req := &graphql.Request{
		OpName: "RenameGroup",
		Query: `
mutation RenameGroup ($id: ID!, $name: String!) {
	updateGroup(id: $id, name: $name) {
		group {
			id
			name
		}
	}
}
`,
		Variables: &__RenameGroupInput{
			Id:   id,
			Name: name,
		},
	}
	var err error

	var data RenameGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func ShowGroup(
	client graphql.Client,
	id string,
) (*ShowGroupResponse, error) {
	req := &graphql.Request{
		OpName: "ShowGroup",
		Query: `
query ShowGroup ($id: ID!) {
	groupMembersById(id: $id) {
		deviceId
		name
		version
		userAgent
	}
}
`,
		Variables: &__ShowGroupInput{
			Id: id,
		},
	}
	var err error

	var data ShowGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

func UnassignDeviceGroup(
	client graphql.Client,
	devicedeviceIdFragment string,
	groupName string,
) (*UnassignDeviceGroupResponse, error) {
	req := &graphql.Request{
		OpName: "UnassignDeviceGroup",
		Query: `
mutation UnassignDeviceGroup ($devicedeviceIdFragment: String!, $groupName: ID!) {
	updateDevice(deviceIdFragment: $devicedeviceIdFragment, removeGroups: [$groupName]) {
		device {
			deviceId
			name
			groupMemberships {
				id
				name
			}
		}
	}
}
`,
		Variables: &__UnassignDeviceGroupInput{
			DevicedeviceIdFragment: devicedeviceIdFragment,
			GroupName:              groupName,
		},
	}
	var err error

	var data UnassignDeviceGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		nil,
		req,
		resp,
	)

	return &data, err
}

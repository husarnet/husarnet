# This file is meant to be written by hand
# schema.graphql on the other hand is being generated by dashboard. Refer to it's readme for instructions how to do it
# After any modification of *.graphql files run `go generate`

mutation ObtainToken($username: String!, $password: String!) {
  tokenAuth(username: $username, password: $password) {
    token
    payload
    refreshExpiresIn
  },
}

mutation RefreshToken($token: String!) {
  refreshToken(token: $token) {
    token
  }
}

mutation CreateGroup($name: String!) {
  createGroup(name: $name) {
    group {
      id
      name
    }
  }
}

mutation RenameGroup($id: ID!, $name: String!) {
  updateGroup(id: $id, name: $name) {
    group {
      id
      name
    }
  }
}

mutation RemoveGroup($id: ID!) {
  removeGroup(id: $id) {
    success
  }
}

mutation RenameDevice($deviceIdFragment: String!, $name: String!) {
  updateDevice(deviceIdFragment: $deviceIdFragment, name: $name) {
    device {
      deviceId
      name
    }
  }
}

mutation RemoveDevice($deviceId: ID!) {
  removeDevice(id: $deviceId) {
    success
  }
}

mutation AssignDeviceGroup($devicedeviceIdFragment: String!, $groupName: ID!) {
  updateDevice(deviceIdFragment: $devicedeviceIdFragment, addGroups: [$groupName]) {
    device {
      deviceId
      name
      groupMemberships {
        id
        name
      }
    }
  }
}

mutation UnassignDeviceGroup($devicedeviceIdFragment: String!, $groupName: ID!) {
  updateDevice(deviceIdFragment: $devicedeviceIdFragment, removeGroups: [$groupName]) {
    device {
      deviceId
      name
      groupMemberships {
        id
        name
      }
    }
  }
}

query GetGroups() {
  groups {
    id
    name
    joinCode
    deviceCount
  }
}

query ShowGroup($id: ID!) {
  groupMembersById(id: $id) {
    deviceId
    name
    version
    userAgent
  }
}

query GetDevices() {
  devices {
    deviceId
    name
    version
    userAgent
    owner {
      username
    }
    isFullyManaged
    groupMemberships {
      id
      name
    }
  }
}

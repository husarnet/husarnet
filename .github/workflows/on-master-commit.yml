jobs:
  build_and_test_esp32:
    needs:
      - "build_linux"
      - "bump_version"
      - "build_builder"
    runs-on: "esp32"
    steps:
      - name: "Cleanup workdir"
        run: "sudo rm -rf ./*"
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Login to Docker Registry"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.HNETUSER_DOCKERHUB_PASSWORD }}"
          registry: "docker.io"
          username: "${{ secrets.HNETUSER_DOCKERHUB_LOGIN }}"
      - name: "Pull Docker builder image"
        run: "docker pull ghcr.io/husarnet/husarnet:builder"
      - name: "Pull artifacts"
        uses: "actions/download-artifact@v4"
        with:
          merge-multiple: true
          path: "./build/release/"
          pattern: "release-linux-amd64"
      - name: "Save a password for unlocking a shared secrets repository in a known place"
        run: |
          echo '${{ secrets.SHARED_SECRETS_PASSWORD }}' > tests/secrets-password.bin
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/tests/secrets-tool.sh decrypt"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/tests/secrets-tool.sh decrypt"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/platforms/esp32/build.sh esp32"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/platforms/esp32/build.sh esp32"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/tests/esp32/ci.sh"
        run: "docker run --rm --privileged --network=host --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/tests/esp32/ci.sh"
      - name: "Push artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: "esp32-test-results.xml"
          path: "./platforms/esp32/junit.xml"
  build_builder:
    needs:
      - "bump_version"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 22
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "If there were any changes to builder - build it and push to ghcr"
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -e "^builder/"; then
            ./builder/build.sh && ./builder/push.sh
          else
            echo "No changes to the builder found - refusing to rebuild"
          fi
  build_docker:
    needs:
      - "build_linux"
      - "bump_version"
      - "build_builder"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Pull artifacts"
        uses: "actions/download-artifact@v4"
        with:
          merge-multiple: true
          path: "./build/release/"
          pattern: "release-linux-${{matrix.arch_alias}}"
      - name: "Set up QEMU"
        uses: "docker/setup-qemu-action@v3"
      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@v3"
        with:
          driver-opts: "image=moby/buildkit:v0.10.5"
          version: "latest"
      - name: "Login to Docker Registry"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.HNETUSER_DOCKERHUB_PASSWORD }}"
          registry: "docker.io"
          username: "${{ secrets.HNETUSER_DOCKERHUB_LOGIN }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Build and push"
        uses: "docker/build-push-action@v5"
        with:
          build-args: "HUSARNET_ARCH=${{matrix.arch_alias}}"
          context: "."
          file: "./platforms/docker/Dockerfile"
          platforms: "${{matrix.arch}}"
          push: true
          tags: "husarnet/husarnet-nightly:${{matrix.arch_alias}}"
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: "linux/amd64"
            arch_alias: "amd64"
          - arch: "linux/arm64/v8"
            arch_alias: "arm64"
          - arch: "linux/arm/v7"
            arch_alias: "armhf"
  build_linux:
    needs:
      - "bump_version"
      - "build_builder"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/platforms/linux/build.sh ${{matrix.arch}} nightly"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/platforms/linux/build.sh ${{matrix.arch}} nightly"
      - name: "Push artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: "release-linux-${{matrix.arch}}"
          path: "./build/release/*${{matrix.arch}}*"
    strategy:
      fail-fast: false
      matrix:
        arch:
          - "amd64"
          - "i386"
          - "arm64"
          - "armhf"
          - "riscv64"
  build_macos:
    needs:
      - "bump_version"
      - "build_builder"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/platforms/macos/build.sh ${{matrix.arch}} nightly"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/platforms/macos/build.sh ${{matrix.arch}} nightly"
      - name: "Push artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: "release-macos-${{matrix.arch}}"
          path: "./build/release/*${{matrix.arch}}*"
    strategy:
      fail-fast: false
      matrix:
        arch:
          - "amd64"
          - "arm64"
  build_windows:
    needs:
      - "bump_version"
      - "build_builder"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/platforms/windows/build.sh nightly"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/platforms/windows/build.sh nightly"
      - name: "Push artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: "release-windows-win64"
          path: "./build/release/*win64*"
  build_windows_installer:
    needs:
      - "build_windows"
      - "bump_version"
      - "build_builder"
    runs-on: "windows-2019"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Pull artifacts"
        uses: "actions/download-artifact@v4"
        with:
          merge-multiple: true
          path: "./build/release/"
          pattern: "release-windows-win64"
      - name: "Copy .exe and license to installer dir"
        run: |
          copy build\release\husarnet-daemon-windows-win64.exe platforms\windows\husarnet-daemon.exe
          copy build\release\husarnet-windows-win64.exe platforms\windows\husarnet.exe
          copy LICENSE.txt platforms\windows
        shell: "cmd"
      - name: "Building the installer"
        run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" platforms\windows\script.iss
          copy platforms\windows\Output\husarnet-setup.exe build\release\husarnet-setup.exe
        shell: "cmd"
      - name: "Push artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: "release-windows-setup"
          path: "./build/release/*setup*"
  bump_version:
    needs: []
    outputs:
      commit_ref: "${{ steps.autocommit.outputs.commit_hash }}"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "master"
      - uses: "actions/setup-python@v5"
        with:
          python-version: "3.x"
      - name: "Bump version"
        run: "python ./util/version-bump.py"
      - name: "Read new version"
        run: "echo \"VERSION=$(cat version.txt)\" >> $GITHUB_ENV"
      - id: "autocommit"
        uses: "stefanzweifel/git-auto-commit-action@v5"
        with:
          commit_message: "Build version ${{ env.VERSION }}"
  release_docker_nightly:
    needs:
      - "run_tests"
      - "run_integration_tests"
      - "build_and_test_esp32"
      - "build_docker"
      - "bump_version"
      - "build_builder"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Login to Docker Registry"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.HNETUSER_DOCKERHUB_PASSWORD }}"
          registry: "docker.io"
          username: "${{ secrets.HNETUSER_DOCKERHUB_LOGIN }}"
      - name: "create manifest"
        run: |
          docker manifest create husarnet/husarnet-nightly:latest \
          --amend husarnet/husarnet-nightly:amd64 \
          --amend husarnet/husarnet-nightly:arm64 \
          --amend husarnet/husarnet-nightly:armhf
          
          docker manifest create husarnet/husarnet-nightly:$(cat version.txt) \
          --amend husarnet/husarnet-nightly:amd64 \
          --amend husarnet/husarnet-nightly:arm64 \
          --amend husarnet/husarnet-nightly:armhf
      - name: "push manifest"
        run: |
          docker manifest push husarnet/husarnet-nightly:latest
          docker manifest push husarnet/husarnet-nightly:$(cat version.txt)
  release_nightly:
    needs:
      - "run_tests"
      - "run_integration_tests"
      - "build_linux"
      - "build_macos"
      - "build_windows_installer"
      - "bump_version"
      - "build_builder"
    runs-on:
      - "self-hosted"
      - "linux"
      - "install-nightly"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Pull artifacts"
        uses: "actions/download-artifact@v4"
        with:
          merge-multiple: true
          path: "./build/release/"
          pattern: "release-*"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Deploy to Husarnet nightly repository"
        run: "/deploy-all.sh nightly"
  run_integration_tests:
    needs:
      - "build_docker"
      - "bump_version"
      - "build_builder"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Pull artifacts"
        uses: "actions/download-artifact@v4"
        with:
          merge-multiple: true
          path: "./build/release/"
          pattern: "release-linux-amd64"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Login to Docker Registry"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.HNETUSER_DOCKERHUB_PASSWORD }}"
          registry: "docker.io"
          username: "${{ secrets.HNETUSER_DOCKERHUB_LOGIN }}"
      - name: "Save a password for unlocking a shared secrets repository in a known place"
        run: |
          echo '${{ secrets.SHARED_SECRETS_PASSWORD }}' > tests/secrets-password.bin
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/tests/secrets-tool.sh decrypt"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/tests/secrets-tool.sh decrypt"
      - name: "Docker run ${{matrix.container_name}} /app/tests/integration/runner.sh ${{matrix.test_platform}} ${{matrix.test_file}} ${{matrix.container_name}}"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ${{matrix.container_name}} /app/tests/integration/runner.sh ${{matrix.test_platform}} ${{matrix.test_file}} ${{matrix.container_name}}"
    strategy:
      fail-fast: false
      matrix:
        container_name:
          - "husarnet/husarnet-nightly:amd64"
          - "ubuntu:18.04"
          - "ubuntu:20.04"
          - "ubuntu:22.04"
          - "ubuntu:24.04"
          - "debian:oldstable"
          - "debian:stable"
          - "debian:testing"
          - "fedora:38"
          - "fedora:39"
          - "fedora:40"
          - "fedora:41"
        include:
          - container_name: "husarnet/husarnet-nightly:amd64"
            test_platform: "docker"
          - container_name: "ubuntu:18.04"
            test_platform: "ubuntu"
          - container_name: "ubuntu:20.04"
            test_platform: "ubuntu"
          - container_name: "ubuntu:22.04"
            test_platform: "ubuntu"
          - container_name: "ubuntu:24.04"
            test_platform: "ubuntu"
          - container_name: "debian:oldstable"
            test_platform: "debian"
          - container_name: "debian:stable"
            test_platform: "debian"
          - container_name: "debian:testing"
            test_platform: "debian"
          - container_name: "fedora:38"
            test_platform: "fedora"
          - container_name: "fedora:39"
            test_platform: "fedora"
          - container_name: "fedora:40"
            test_platform: "fedora"
          - container_name: "fedora:41"
            test_platform: "fedora"
        test_file:
          - "functional-basic"
  run_tests:
    needs:
      - "bump_version"
      - "build_builder"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/daemon/format.sh"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/daemon/format.sh"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/tests/test.sh"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/tests/test.sh"
  update_in_homebrew_tap:
    needs:
      - "release_nightly"
      - "bump_version"
      - "build_builder"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ needs.bump_version.outputs.commit_ref }}"
      - name: "Read new version"
        run: "echo \"VERSION=$(cat version.txt)\" >> $GITHUB_ENV"
      - env:
          COMMITTER_TOKEN: "${{ secrets.HOMEBREW_TAP_COMMITER_TOKEN }}"
        uses: "mislav/bump-homebrew-formula-action@v3"
        with:
          commit-message: |
            Husarnet for MacOS version {{version}}
            
            Automatic commit by https://github.com/mislav/bump-homebrew-formula-action
          download-url: "https://nightly.husarnet.com/macos/arm64/husarnet-${{ env.VERSION }}-arm64.tgz"
          homebrew-tap: "husarnet/homebrew-tap-nightly"
          tag-name: "${{ env.VERSION }}"
name: "Release nightly"
"on":
  push:
    branches:
      - "master"
  workflow_dispatch: {}

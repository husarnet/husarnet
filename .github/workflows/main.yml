name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare build
        run: ./util/build-prepare.sh

      - name: Build for all platforms and archs
        run: ./util/build-all.sh

      - name: Prepare tests
        run: ./util/test-prepare.sh

      - name: Run UTs
        run: ./util/test-unit.sh

      # Temporarily disable SA to check the other thing
      # - name: Run static analysis (cppcheck)
      #   run: ./util/test-cppcheck.sh

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: ./build/release

  release_nightly:
    needs: build_and_test

    runs-on: [self-hosted, linux, nightly]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Fetch artifacts
        uses: actions/download-artifact@v2
        with:
          name: packages

      - name: Deploy to Husarnet nightly repository
        run: ./util/deploy-nightly.sh


  push_docker_images:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.HNETUSER_DOCKERHUB_LOGIN }}
          password: ${{ secrets.HNETUSER_DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./unix/docker-misc/Dockerfile
          platforms: linux/arm64/v8, linux/amd64, linux/arm/v7
          push: true
          tags: husarnet/husarnet
          #cache-from: type=registry,ref=
          #cache-to: type=inline

name: Build & test

on:
  pull_request:
    branches: [master]

# When changing steps remember to sync the steps with the other YAMLs
jobs:
  build_unix:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [amd64, i386, arm64, armhf, riscv64]

    steps:
      - uses: actions/checkout@v2

      - name: Prepare build
        run: ./util/build-prepare.sh

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"

      - name: Build C++
        run: ./util/build-cmake.sh ${{matrix.arch}} unix

      - name: Build CLI
        run: ./util/build-cli.sh ${{matrix.arch}} unix

      - name: Build tar
        run: ./util/package-unix.sh ${{matrix.arch}} tar

      - name: Build deb
        run: ./util/package-unix.sh ${{matrix.arch}} deb

      - name: Build rpm
        run: ./util/package-unix.sh ${{matrix.arch}} rpm

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: ./build/release/
          if-no-files-found: error

  build_windows:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare build
        run: ./util/build-prepare.sh

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"

      - name: Build C++
        run: ./util/build-cmake.sh win64 windows

      - name: Build CLI
        run: ./util/build-cli.sh win64 windows

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: ./build/release/
          if-no-files-found: error

  build_windows_installer:
    needs: build_windows

    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: Fetch artifacts
        uses: actions/download-artifact@v3
        with:
          name: packages

      - name: Copy .exe and license to installer dir
        run: |
          copy husarnet-daemon-windows-win64.exe platforms\windows\husarnet-daemon.exe
          copy husarnet-windows-win64.exe platforms\windows\husarnet.exe
          copy LICENSE.txt platforms\windows
        shell: cmd

      - name: Building the installer
        run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" platforms\windows\script.iss
        shell: cmd

      - name: Upload installer
        uses: actions/upload-artifact@v3
        with:
          name: windows_installer
          path: platforms\windows\Output\husarnet-setup.exe

  # Do not use this workflow on release workflows as it can't be uploaded to a single tag
  build_docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [linux/amd64] # This is limited due to performance reasons. Remember to enable them on production/release builds

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Build docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./platforms/docker/Dockerfile
          platforms: ${{matrix.arch}}
          push: false

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare tests
        run: ./util/test-prepare.sh

      - name: Build UTs
        run: ./util/test-unit-build.sh

      - name: Run UTs
        run: ./util/test-unit-run.sh

      # - name: Run static analysis (cppcheck)
      #   run: ./util/test-cppcheck.sh

  # bump_version:
  #   needs: build_and_test

  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ref: ${{ github.head_ref }}

  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.x"

  #     - name: Bump version
  #       run: python ./util/version-bump.py

  #     - name: Push version bump on top of PR-ed branch
  #       run: |
  #         git config --global user.name 'Husarnet CI man'
  #         git config --global user.email 'szymon.niemiec@husarnet.com'
  #         git commit -am "Automatic version bump. The PR branch is ready to be merged."
  #         git push

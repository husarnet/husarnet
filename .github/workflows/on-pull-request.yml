jobs:
  build_docker:
    needs:
      - "build_linux"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ github.ref }}"
      - name: "Pull artifacts"
        uses: "actions/download-artifact@v4"
        with:
          merge-multiple: true
          path: "./build/release/"
          pattern: "release-linux-${{matrix.arch_alias}}"
      - name: "Set up QEMU"
        uses: "docker/setup-qemu-action@v3"
      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@v3"
        with:
          driver-opts: "image=moby/buildkit:v0.10.5"
          version: "latest"
      - name: "Login to Docker Registry"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.HNETUSER_DOCKERHUB_PASSWORD }}"
          registry: "docker.io"
          username: "${{ secrets.HNETUSER_DOCKERHUB_LOGIN }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Build and push"
        uses: "docker/build-push-action@v5"
        with:
          build-args: "HUSARNET_ARCH=${{matrix.arch_alias}}"
          context: "."
          file: "./platforms/docker/Dockerfile"
          platforms: "${{matrix.arch}}"
          push: false
          tags: "husarnet/husarnet-nightly:${{matrix.arch_alias}}"
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: "linux/amd64"
            arch_alias: "amd64"
          - arch: "linux/arm64/v8"
            arch_alias: "arm64"
          - arch: "linux/arm/v7"
            arch_alias: "armhf"
  build_linux:
    needs: []
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ github.ref }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/platforms/linux/build.sh ${{matrix.arch}} nightly"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/platforms/linux/build.sh ${{matrix.arch}} nightly"
      - name: "Push artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: "release-linux-${{matrix.arch}}"
          path: "./build/release/*${{matrix.arch}}*"
    strategy:
      fail-fast: false
      matrix:
        arch:
          - "amd64"
          - "i386"
          - "arm64"
          - "armhf"
          - "riscv64"
  build_macos:
    needs: []
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ github.ref }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/platforms/macos/build.sh ${{matrix.arch}} nightly"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/platforms/macos/build.sh ${{matrix.arch}} nightly"
      - name: "Push artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: "release-macos-${{matrix.arch}}"
          path: "./build/release/*${{matrix.arch}}*"
    strategy:
      fail-fast: false
      matrix:
        arch:
          - "amd64"
          - "arm64"
  build_windows:
    needs: []
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ github.ref }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/platforms/windows/build.sh nightly"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/platforms/windows/build.sh nightly"
      - name: "Push artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: "release-windows-win64"
          path: "./build/release/*win64*"
  build_windows_installer:
    needs:
      - "build_windows"
    runs-on: "windows-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ github.ref }}"
      - name: "Pull artifacts"
        uses: "actions/download-artifact@v4"
        with:
          merge-multiple: true
          path: "./build/release/"
          pattern: "release-windows-win64"
      - name: "Copy .exe and license to installer dir"
        run: |
          copy build\release\husarnet-daemon-windows-win64.exe platforms\windows\husarnet-daemon.exe
          copy build\release\husarnet-windows-win64.exe platforms\windows\husarnet.exe
          copy LICENSE.txt platforms\windows
        shell: "cmd"
      - name: "Building the installer"
        run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" platforms\windows\script.iss
          copy platforms\windows\Output\husarnet-setup.exe build\release\husarnet-setup.exe
        shell: "cmd"
      - name: "Push artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: "release-windows-setup"
          path: "./build/release/*setup*"
  run_integration_tests:
    needs:
      - "build_docker"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ github.ref }}"
      - name: "Pull artifacts"
        uses: "actions/download-artifact@v4"
        with:
          merge-multiple: true
          path: "./build/release/"
          pattern: "release-linux-amd64"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Login to Docker Registry"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.HNETUSER_DOCKERHUB_PASSWORD }}"
          registry: "docker.io"
          username: "${{ secrets.HNETUSER_DOCKERHUB_LOGIN }}"
      - name: "Save a password for unlocking a shared secrets repository in a known place"
        run: |
          echo '${{ secrets.SHARED_SECRETS_PASSWORD }}' > tests/secrets-password.bin
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/tests/secrets-tool.sh decrypt"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/tests/secrets-tool.sh decrypt"
      - name: "Docker run ${{matrix.container_name}} /app/tests/integration/runner.sh ${{matrix.test_platform}} ${{matrix.test_file}} ${{matrix.container_name}}"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ${{matrix.container_name}} /app/tests/integration/runner.sh ${{matrix.test_platform}} ${{matrix.test_file}} ${{matrix.container_name}}"
    strategy:
      fail-fast: false
      matrix:
        container_name:
          - "husarnet/husarnet-nightly:amd64"
          - "ubuntu:18.04"
          - "ubuntu:20.04"
          - "ubuntu:22.04"
          - "ubuntu:24.04"
          - "debian:oldstable"
          - "debian:stable"
          - "debian:testing"
          - "fedora:38"
          - "fedora:39"
          - "fedora:40"
          - "fedora:41"
        include:
          - container_name: "husarnet/husarnet-nightly:amd64"
            test_platform: "docker"
          - container_name: "ubuntu:18.04"
            test_platform: "ubuntu"
          - container_name: "ubuntu:20.04"
            test_platform: "ubuntu"
          - container_name: "ubuntu:22.04"
            test_platform: "ubuntu"
          - container_name: "ubuntu:24.04"
            test_platform: "ubuntu"
          - container_name: "debian:oldstable"
            test_platform: "debian"
          - container_name: "debian:stable"
            test_platform: "debian"
          - container_name: "debian:testing"
            test_platform: "debian"
          - container_name: "fedora:38"
            test_platform: "fedora"
          - container_name: "fedora:39"
            test_platform: "fedora"
          - container_name: "fedora:40"
            test_platform: "fedora"
          - container_name: "fedora:41"
            test_platform: "fedora"
        test_file:
          - "functional-basic"
  run_tests:
    needs: []
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
        with:
          ref: "${{ github.ref }}"
      - name: "Login to GHCR"
        uses: "docker/login-action@v3"
        with:
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: "ghcr.io"
          username: "${{ github.actor }}"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/daemon/format.sh"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/daemon/format.sh"
      - name: "Docker run ghcr.io/husarnet/husarnet:builder /app/tests/test.sh"
        run: "docker run --rm --privileged --tmpfs /var/lib/husarnet:rw,exec --volume $(pwd):/app ghcr.io/husarnet/husarnet:builder /app/tests/test.sh"
name: "Pull request workflow"
"on":
  pull_request:
    branches:
      - "master"
      - "hotfix"
